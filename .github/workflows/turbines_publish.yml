name: Turbines Publish

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+-*"

jobs:
  publish:
    name: Turbines Publish
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: "Setup Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: "./turbines/pyproject.toml"

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Install the project
        working-directory: ./turbines
        run: uv sync --all-extras --dev

      - name: Run tests
        working-directory: ./turbines
        run: |
          uv run pytest tests/ -v
        env:
          CLUSTER_ID: ${{ vars.CLUSTER_ID }}
          DATABRICKS_HOST: ${{ vars.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}

      - name: Install Databricks CLI
        uses: databricks/setup-cli@v0.243.0

      - name: Build wheel
        working-directory: ./turbines
        run: uv build

      - name: Upload wheel to Databricks Volume and deploy Bundle
        working-directory: ./turbines
        run: |
          WHEEL_PATH=$(ls dist/*.whl)
          WHEEL_NAME=$(basename $WHEEL_PATH)
          databricks fs cp --overwrite "$WHEEL_PATH" "dbfs:${{ vars.DATABRICKS_WHEEL_VOLUME }}"
          if [[ "${{github.base_ref}}" == "main" || "${{github.ref}}" == "refs/heads/main" ]]; then
            databricks bundle deploy -t prod --var="wheel_path=${{ vars.DATABRICKS_WHEEL_VOLUME }}/$WHEEL_NAME"
          else
            databricks bundle deploy -t dev --var="wheel_path=${{ vars.DATABRICKS_WHEEL_VOLUME }}/$WHEEL_NAME"
          fi
        env:
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
